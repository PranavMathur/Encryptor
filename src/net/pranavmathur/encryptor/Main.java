package net.pranavmathur.encryptor;

import java.io.File;
import java.util.List;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

public class Main {
	
	/**
	 * The {@code Options} object shared by all methods.
	 */
	private static Options options;
	
	/**
	 * The {@code CommandLine} object shared by all methods.
	 */
	private static CommandLine line;

	/**
	 * Builds the {@code options} object and interpret the arguments.
	 * @param args the Command Line Arguments, parsed by the Apache CLI library
	 */
	public static void main(String[] args) {
		Option passphraseOption = Option.builder("p")
				.longOpt("passphrase")
				.desc("use the given passphrase")
				.numberOfArgs(1)
				.build();
		Option visualOption = Option.builder("V")
				.longOpt("visual")
				.desc("prompt for password and files using GUI")
				.build();
		Option verboseOption = Option.builder("v")
				.longOpt("verbose")
				.desc("print all file names as they are encrypted")
				.build();
		Option helpOption = Option.builder()
				.longOpt("help")
				.desc("print this help message")
				.build();
		Option obfuscateOption = Option.builder("o")
				.longOpt("obfuscate")
				.desc("obfuscate file names")
				.build();
		options = new Options();
		OptionGroup passphraseGroup = new OptionGroup();
		passphraseGroup.addOption(passphraseOption);
		passphraseGroup.addOption(visualOption);
		options.addOptionGroup(passphraseGroup);
		options.addOption(verboseOption);
		options.addOption(helpOption);
		options.addOption(obfuscateOption);
		if (args.length == 0) {
			System.out.println("No args given");
			printHelp();
			System.exit(1);
		}
		CommandLineParser parser = new DefaultParser();
		try {
			line = parser.parse(options,  args);
			interpretArguments();
		} catch (ParseException e) {
			System.out.println(e.getMessage());
			printHelp();
			System.exit(1);
		}
	}
	
	/**
	 * Performs the majority of the interpretation of the given switches.
	 * @throws ParseException if discrepancies are found in the options
	 */
	private static void interpretArguments() throws ParseException {
		if (line.hasOption("help")) {
			printHelp();
			return;
		}
		final List<File> files;
		if (line.hasOption("V")) {
			files = Files.getFilesVisual();
		} else {
			files = Files.getFiles(line.getArgs());
		}
		if (files.size() == 0) {
			System.out.println("No files given");
			printHelp();
			System.exit(1);
		}
		final String passphrase;
		if (line.hasOption("p")) {
			passphrase = (String) line.getParsedOptionValue("p");
		} else if (line.hasOption("V")) {
			passphrase = Passphrase.getPassphraseVisual();
		} else {
			passphrase = Passphrase.getPassphrase();
		}
		if (passphrase == null) return;
		boolean obfuscate = line.hasOption("o");
		boolean verbose = line.hasOption("v");
		int status = 0;
		for (File f : files) {
			if (!Encryptor.encryptFile(f, passphrase, obfuscate, verbose)) {
				status = 1;
			}
		}
		System.exit(status);
	}
	
	/**
	 * Prints the help message generated by the Apache CLI, using the global
	 * {@code Options} object.
	 */
	private static void printHelp() {
		HelpFormatter formatter = new HelpFormatter();
		formatter.printHelp("Encryptor [OPTION]... [FILE]...", options);
	}

}
